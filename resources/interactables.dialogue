~ electrical_panel

if not State.electrical_panel.panel_removed:
	You remove the panel. There is a battery inside.
	set State.electrical_panel.panel_removed = true

if not State.electrical_panel.battery_taken:
	Take the battery?
	- Yes
		You took the battery.
		set State.electrical_panel.battery_taken = true
		do State.electrical_panel.remove_from_group("Interactable")  # todo: move this logic into the script file
		=> END
	- No => END

=> END

~ broken_pipe

There is an exposed electrical wire here.
if State.electrical_panel.battery_taken and not State.broken_pipe.battery_charged:
	Charge the battery?
	- Yes
		The battery is now charged.
		set State.broken_pipe.battery_charged = true
		do State.broken_pipe.remove_from_group("Interactable")
	- No => END
	
=> END

~ computer_table 
if not State.computer_table.powered:
	It is a large table with a computer screen. The computer currently has no power.
	if State.electrical_panel.battery_taken:
		Insert the battery?
		- Yes
			You insert the battery.
			if not State.broken_pipe.battery_charged:
				Computer: ERROR - External power source voltage is too low!
				You removed the battery. Maybe there is somewhere to charge it nearby?
			else:
				The computer turns on.
				set State.computer_table.powered = true
		- No => END
if State.computer_table.puzzle_1_solved:
	Computer: Welcome, superuser, now displaying the latest captain's log...
	You can now interact with the table again to view the captain's log.
=> END

~ red_door
This is the first door leading to the main computer room. It seems like CatGPT has activated the security lockdown mode.
if not State.computer_table.puzzle_1_solved:
	Red door: ERROR - superuser level required. The incident will be reported.
else:
	Red door: Superuser level confirmed.
	do State.red_door.erase()
	The door unlocks.
=> END

~ blue_door
if not State.computer_wall.puzzle_2_solved:
	Blue: ERROR - Instruction "Open door" not found.
	It seems that the door's logic circuit isn't functioning.
else:
	Blue door: Executing instruction "Open door"...
	do State.blue_door.erase()
	The door unlocks.
=> END

~ crowbar
do State.crowbar.sprite.queue_free()
You picked up the crowbar.
do State.crowbar.pickup()
=> END

~ grate
if not State.crowbar.taken:
	It's a metal grate. You can just barely spot a small object on the other side.
if not State.computer_wall.puzzle_2_solved:
	Now isn't the time to mess around with this!
	=> END
if State.crowbar.taken:
	Use the crowbar?
	- Yes
		You pry the grate open and pick up the small object inside.
		The object is a USB stick labelled "YellOS Boot Device". 
		do State.grate.take_usb()
	- No => END 
else:
	It's too heavy to move with your hands alone.
=> END

~ computer_wall
if not State.computer_table.powered:
	Remote console: ERROR - unable to connect to main control server. Have you tried turning it off and on again?
	=> END
if not State.computer_table.puzzle_1_solved:
	Remote console: ERROR - superuser level required. The incident will be reported. 
	=> END
if State.computer_wall.puzzle_2_solved:
	The ship's logic circuits are now fully working again.
=> END
